letters
LETTERS
c(1:4)
LETTERS[1:5]
devtools::document()
getwd()
devtools::document()
setwd("..")
install("FCgene")
install.packages("FCgene")
devtools::install("FCgene")
search()
devtools::install("FCgene")
search()
devtools::install_github("zhoujw28/FCgene_R")
devtools::install_github("zhoujw28/FCgene_R")
search()
library(FCgene_R)
library(FCgene)
letters(1:100)
LETTERS(1:10)
LETTERS
LETTERS[1:100]
c(letters, LETTERS)
paste(LETTERS, letters, sep = "")
gene_name <- paste("gene", LETTERS)
gene_name
gene_name <- paste("gene", LETTERS, sep = "")
gene_name
sample_name <- paste("sample", c(1:8), sep = "")
sample_name
lapply(gene_name, FUN = function(x) x = rnorm(8))
lapply(gene_name, FUN = function(x) x = rnorm(8), simplify = TRUE)
library(dplyr)
lapply(gene_name, FUN = function(x) x = rnorm(8), simplify = TRUE) %>% as.matrix()
lapply(gene_name, FUN = function(x) x = rnorm(8)) %>% as.matrix()
lapply(gene_name, FUN = function(x) x = rnorm(8)) %>% as.data.frame()
lapply(gene_name, FUN = function(x) x = rnorm(8)) %>% as.data.frame(row.names = gene_name, col.names = sample_name)
lapply(gene_name, FUN = function(x) x = rnorm(8)) %>% as.data.frame() %>% dim()
lapply(gene_name, FUN = function(x) x = rnorm(8)) %>% as.data.frame() %>% t()
lapply(gene_name, FUN = function(x) x = rnorm(8)) %>% as.data.frame() %>% t() %>% dim()
lapply(gene_name, FUN = function(x) x = rnorm(8)) %>% as.data.frame(row.names = sample_name, col.names = gene_name) %>% t()
c(rnorm(4),rnorm(4))
MyexprSet <- lapply(gene_name, FUN = function(x) x = c(rnorm(0, 6, 4), rnorm(0, 60, 4))) %>%
as.data.frame(row.names = sample_name, col.names = gene_name) %>% t()
MyexprSet <- lapply(gene_name, FUN = function(x) x = c(rnorm(0, 6, 4), rnorm(0, 60, 4))) %>%
as.data.frame() %>% dim() #row.names = sample_name, col.names = gene_name) %>% t()
lapply(gene_name, FUN = function(x) x = c(rnorm(0, 6, 4), rnorm(0, 60, 4))) %>%
as.data.frame() %>% dim()
lapply(gene_name, FUN = function(x) x = c(rnorm(4, 0, 6), rnorm(4, 0, 60))) %>%
as.data.frame() %>% dim()
MyexprSet <- lapply(gene_name, FUN = function(x) x = c(rnorm(4, 0, 6), rnorm(4, 0, 60))) %>%
as.data.frame(row.names = sample_name, col.names = gene_name) %>% t()
Myexpr
MyexprSet
View(MyexprSet)
View(MyexprSet)
MyFCresult <- FCgene(exprSet = MyexprSet, col.g1 = 4, col.g2 = 4)
1:4
MyFCresult <- FCgene(exprSet = MyexprSet, col.g1 = 1:4, col.g2 = 5:8)
library(FCgene)
devtools::install_github("zhoujw28/FCgene_R")
library(FCgene)
MyFCresult <- FCgene(exprSet = MyexprSet, col.g1 = 1:4, col.g2 = 5:8)
devtools::install("FCgene")
library(FCgene)
FCgene
MyFCresult <- FCgene(exprSet = MyexprSet, col.g1 = 1:4, col.g2 = 5:8)
length(MyFCresult)
text_that("The FCgene outputs the right format of results",{
expect_is(MyFCresult, "list")
expect_length(MyFCresult, 3)
})
load("~/grad school/biost561/responses/hw6-zhoujw28/FCgene/data/geneprofex.rda")
data(geneprofex.rda)
data(geneprofex)
View(geneprofex)
1:4
c(1:4)
load("~/grad school/biost561/responses/hw6-zhoujw28/FCgene/data/geneprofex.RData")
View(mydata)
data(geneprofex)
MyexprSet <- data(geneprofex)
install.packages("testthat")
mydata
class(mydata)
col.g2
col.g2 <- 1:4
apply(mydata[,col.g2], 1, mean)
install.packages("testthat")
library(FCgene)
library(testthat)
devtools::install_github("zhoujw28/FCgene_R")
library(FCgene)
FCgene
